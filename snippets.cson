# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

# node: callback handler via q module
'.source.js':
  'Q Callback':
    'prefix': 'aqcb'
    'body': '.then(function(result) {\n
            //...\n
          }.bind(this))\n
          .fail(function(error) {\n
            console.log(error);\n
            //...\n
          }.bind(this));\n'
# node: requires statement
'.source.js':
  'Create Requires':
    'prefix': 'areq'
    'body': 'var ${1:var} = require(\'${2:module}\');'
# new class
'.source.js':
  'Create Class':
    'prefix': 'acl'
    'body': 'var ${1:name} = {\n
              ${2:method}: function(${3:arg}) {\n
                ${4:body}\n
              }\n
            }\n'
# new method
'.source.js':
  'add method':
    'prefix': 'ameth'
    'body': ',\n
            ${1:method}: function(${2:arg}){\n
              ${3:body}\n
              }\n'

# exports
#add export!
'.source.js':
  'module.exports':
    'prefix': 'aexp'
    'body': 'module.exports = ${1:module};'

# for loop
'.source.js':
  'for loop':
    'prefix': 'aloop'
    'body': 'for(var i =0; i<${1:array}.length; i++) {\n
        var ${2:var} = ${1:array}[i];\n
      }'

# function
'.source.js':
  'function':
    'prefix': 'afun'
    'body': 'function ${1:name}(${2:arg}) {\n
      ${3:arg}\n
      }'
